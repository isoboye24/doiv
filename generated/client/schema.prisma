generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name     String
  surname  String
  role     String  @default("user")
  image    String?
  password String
  email    String  @unique(map: "user_email_idx")
}

model Category {
  id                 Int                    @id @default(autoincrement())
  categoryName       String
  project            ProjectsOnCategories[]
  SkillsOnCategories SkillsOnCategories[]
}

model Message {
  id          Int      @id @default(autoincrement())
  senderName  String
  senderEmail String
  messageText String
  date        DateTime @default(now()) @db.Timestamp(6)
  subject     String
}

model Project {
  id               Int                    @id @default(autoincrement())
  projectName      String
  category         ProjectsOnCategories[]
  image            Image[]
  projectThumbnail String
  siteLink         String?
  codeLink         String?
  description      String?
  date             DateTime               @default(now()) @db.Timestamp(6)
}

model ProjectsOnCategories {
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
  project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId  Int

  @@id([categoryId, projectId])
}

model Image {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  caption   String?
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  date      DateTime @default(now()) @db.Timestamp(6)
}

enum Role {
  USER
  ADMIN
}

model Skill {
  id        Int                  @id @default(autoincrement())
  skillName String
  category  SkillsOnCategories[]
}

model SkillsOnCategories {
  skill      Skill    @relation(fields: [skillId], references: [id], onDelete: Cascade)
  skillId    Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int

  @@id([categoryId, skillId])
}
